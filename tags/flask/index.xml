<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask on 乾之 三爻</title>
    <link>https://yokonsan.github.io/tags/flask/</link>
    <description>Recent content in Flask on 乾之 三爻</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 Jul 2018 14:05:37 +0800</lastBuildDate><atom:link href="https://yokonsan.github.io/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flask的经典错误</title>
      <link>https://yokonsan.github.io/posts/2018/7/flask-classic-error/</link>
      <pubDate>Sun, 29 Jul 2018 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2018/7/flask-classic-error/</guid>
      <description>在编写 Flask 应用的单元测试，离线应用时候经常会遇到，*RuntimeError: Working outside of application context.*的报错。这个报错是在没有激活程序上下文情况下，进行了一些程序上下文或请求上下文的操作。先看下面的两</description>
    </item>
    
    <item>
      <title>基于flask的静态博客</title>
      <link>https://yokonsan.github.io/posts/2018/2/static-blog-based-on-flask/</link>
      <pubDate>Wed, 21 Feb 2018 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2018/2/static-blog-based-on-flask/</guid>
      <description>我比较喜欢简单的东西，起初我的博客是很简单的，只有最基础的编辑文章和管理文章。 连评论框都没想去弄，现在想想确实有道理。最近一段时间忙于春节拜年，利用一些琐碎 的时间构思，实现了一个基于 flask 的静态博客。我个</description>
    </item>
    
    <item>
      <title>flask应用缓存实现的疑惑和答案</title>
      <link>https://yokonsan.github.io/posts/2018/2/flask-app-cache-problems-and-answers/</link>
      <pubDate>Fri, 09 Feb 2018 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2018/2/flask-app-cache-problems-and-answers/</guid>
      <description>前言 最近自己一直在折腾站点程序，觉得自己的站点响应速度越来越慢。就想着引入一些缓 存，毕竟这是提高速度最简单的方式了。但是动态博客不像静态博客那样，不需要考虑数 据的更新，全局添加缓存。所以若想加入缓存就</description>
    </item>
    
    <item>
      <title>Ubuntu&#43;uwsgi&#43;Nginx部署Flask应用</title>
      <link>https://yokonsan.github.io/posts/2017/12/ubuntu-nginx-uwsgi-flask-app/</link>
      <pubDate>Tue, 12 Dec 2017 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2017/12/ubuntu-nginx-uwsgi-flask-app/</guid>
      <description>由于是第一次在Linux部署Python应用，过程中遇到很多坑，也找了很多部署博客的分享。再一次体会到好文章带你上天堂，坏文章带你瞎逼忙的道理。索性就记录这次部署的全过程，供以后参考。 介绍 首先先介绍下</description>
    </item>
    
    <item>
      <title>Flask不渲染显示sitemap.xml</title>
      <link>https://yokonsan.github.io/posts/2017/12/flask-web-sitemap/</link>
      <pubDate>Mon, 11 Dec 2017 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2017/12/flask-web-sitemap/</guid>
      <description>嫌弃Wordprcess笨重速度慢，而且不支持markdown语法，就用hexo驱动做静态博客。又觉得hexo麻烦，不是很喜欢，就想着全凭自己的喜好来做一个功能齐全的博客网站，于是就有了这个小站。使用</description>
    </item>
    
    <item>
      <title>我看小说的时候我在看什么</title>
      <link>https://yokonsan.github.io/posts/2017/8/what-looking-when-read-novels/</link>
      <pubDate>Wed, 02 Aug 2017 14:05:37 +0800</pubDate>
      
      <guid>https://yokonsan.github.io/posts/2017/8/what-looking-when-read-novels/</guid>
      <description>最近无聊的时候逛知乎收到几个伙伴的私信，是我之前在专栏写的一个小说网站的代码不能用了。由于我之前说过不在更新那个项目了，所以我也没想去改，我知道大部分原因是爬虫抓取的小说网站更新了，爬虫代码用不了了。</description>
    </item>
    
  </channel>
</rss>
